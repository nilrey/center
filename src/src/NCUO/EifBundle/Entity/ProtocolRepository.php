<?php

namespace App\NCUO\EifBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ProtocolRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProtocolRepository extends EntityRepository
{
    
    /**
     * Функция вывода всего списка протоколов по блокам
     */
    
    public function getDataByBlocks($source, $start, $length, $search_str) {
        $em = $this->getEntityManager();
        
        // Получаем общее кол-во строк
        $total_cnt = $em->createQuery(
            '
            SELECT COUNT(p)
            FROM NCUOEifBundle:Protocol p
            WHERE p.source = :id_source
                AND LOWER(p.protocol_name) LIKE LOWER(:search_str)
            '
        )                
        ->setParameter('id_source', $source)
        ->setParameter('search_str', '%' . $search_str . '%')
        ->getSingleScalarResult();
        
        // Получаем выборку строк в заданном диапазоне
        $data = $em->createQuery(
            '
            SELECT p
            FROM NCUOEifBundle:Protocol p
            WHERE p.source = :id_source
                AND LOWER(p.protocol_name) LIKE LOWER(:search_str)
            ORDER BY p.protocol_sign_date, p.protocol_name ASC
            '
        )
        ->setParameter('id_source', $source)
        ->setParameter('search_str', '%' . $search_str . '%')
        ->setFirstResult($start)
        ->setMaxResults($length)
        ->getResult();
        
        return array(
            'total_cnt' => $total_cnt,
            'data' => $data
        );
    } 
    
    /**
     * Функция получения протокола с учетом пользователя ФОИВ/РОИВ
     */
    
    public function findByUser($id_protocol, $foiv_roiv_flag, $fr_obj) {
        $em = $this->getEntityManager();
        
        if ($foiv_roiv_flag == 'FOIV') {
            return $em->createQuery(
                '
                SELECT p
                FROM NCUOEifBundle:Protocol p
                WHERE p.id_protocol = :id_protocol
                    AND p.source IN (SELECT s FROM NCUOEifBundle:Source s WHERE s.foiv = :id_foiv)
                '
            )
            ->setParameter('id_protocol', $id_protocol)
            ->setParameter('id_foiv', $fr_obj)
            ->getOneOrNullResult();
        } else {
            return $em->createQuery(
                '
                SELECT p
                FROM NCUOEifBundle:Protocol p
                WHERE p.id_protocol = :id_protocol
                    AND p.source IN (SELECT s FROM NCUOEifBundle:Source s WHERE s.roiv = :id_roiv)
                '
            )
            ->setParameter('id_protocol', $id_protocol)
            ->setParameter('id_roiv', $fr_obj)
            ->getOneOrNullResult();            
        }
    }
    
    /**
     * Функция получения общего количества протоколов
     */
    
    public function getTotalCount() {
        return $this->getEntityManager()->createQuery('SELECT COUNT(p) FROM NCUOEifBundle:Protocol p')->getSingleScalarResult();
    }    
}
